- hosts: vault
  become_user: root
  become: true

  tasks:
    - name: install squid-deb-proxy-client
      apt:
        name: squid-deb-proxy-client
        state: present
        update-cache: yes
    - name: install gnupg
      apt:
        name: gnupg
        update-cache: yes
        state: present
    - name: add Hashicorp GPG key
      apt_key:
        url: https://apt.releases.hashicorp.com/gpg
        state: present
    - name: add Hashicorp repo
      apt_repository:
        repo: deb [arch=amd64] https://apt.releases.hashicorp.com {{ ansible_distribution_release }} main
    - name: install Vault, python3, and python3-pip
      apt:
        name: "{{ item }}"
        update-cache: yes
        state: present
      loop:
        - vault
        - python3
        - python3-pip
    - name: install psutil
      pip:
        name: psutil
        state: present
    - name: update config to listen on machine's IP address
      replace:
        path: vault-config.hcl
        regexp: (127.0.0.1)
        replace: "{{ ansible_default_ipv4.address }}"
      become: no
      delegate_to: localhost
    - name: copy config
      copy:
        src: vault-config.hcl
        dest: /etc/vault.d/vault.hcl
        owner: vault
        group: vault
        mode: u+rw
    - name: enable and start Vault service
      systemd:
        name: vault
        enabled: yes
        state: restarted
    - name: check for Vault initialization file
      stat:
        path: vault_details.txt
      register: vault_details
    - name: initialize Vault
      command:
        cmd: vault operator init
      register: vault_output
      when: not vault_details.stat.exists
      environment:
        VAULT_ADDR: "http://{{ ansible_default_ipv4.address }}:8200"
    - name: echo vault output
      debug:
        msg: "{{ vault_output }}"
    - name: save Vault init output
      copy:
        dest: vault_details.txt
        content: "{{ vault_output.stdout  }}"
        owner: root
        mode: 0600
      when: not vault_details.stat.exists
    - name: get key details from init file
      command:
        cmd: cat vault_details.txt
      register: init_details
    - name: unseal Vault with Key 1
      command:
        cmd: "vault operator unseal {{ init_details.stdout_lines[0] | regex_replace('(?:Unseal Key [0-9]{1}:) (.*)', '\\1') }}"
      environment:
        VAULT_ADDR: "http://{{ ansible_default_ipv4.address }}:8200"
    - name: unseal Vault with Key 2
      command:
        cmd: "vault operator unseal {{ init_details.stdout_lines[1] | regex_replace('(?:Unseal Key [0-9]{1}:) (.*)', '\\1') }}"
      environment:
        VAULT_ADDR: "http://{{ ansible_default_ipv4.address }}:8200"
    - name: unseal Vault with Key 3
      command:
        cmd: "vault operator unseal {{ init_details.stdout_lines[2] | regex_replace('(?:Unseal Key [0-9]{1}:) (.*)', '\\1') }}"
      environment:
        VAULT_ADDR: "http://{{ ansible_default_ipv4.address }}:8200"
# FULL TODO
# ~~install Vault~~
# Use Vault to store secrets to use in Terraform
# Use Terraform to install k8s
# Use helm to install Rancher
# Use k8s to install AWX
